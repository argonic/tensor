!function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},r.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=2)}([function(t,e,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=function(){function t(t){for(var e=[],r=1;r<arguments.length;r++)e[r-1]=arguments[r];if(this.tensorFilled=!1,this.tensorFill=0,this.tensorDimensions=0,this.tensorStrides=[],this.tensorMax=void 0,this.tensorMin=void 0,1===e.length&&Array.isArray(e[0])&&(e=e[0]),0===e.length)throw new Error("Cannot create zero dimensions tensors");for(var n=0,o=e;n<o.length;n++){var i=o[n];if("number"!=typeof i||i<1||i%1!=0)throw new Error("shape must consist of natural integers")}this.tensorType=t,this.process(e)}return Object.defineProperty(t.prototype,"max",{get:function(){return this.tensorMax},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"min",{get:function(){return this.tensorMin},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"length",{get:function(){return this.tensorLength},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"type",{get:function(){return this.tensorType},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"strides",{get:function(){return this.tensorStrides},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"dimensions",{get:function(){return this.tensorDimensions},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"filling",{get:function(){return this.tensorFill},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"filled",{get:function(){return this.tensorFilled},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"shape",{get:function(){return this.tensorShape},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"T",{get:function(){return this.transpose()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"array",{get:function(){for(var t=[],e=this.tensorDimensions-1,r=this.flat,n=0;n<this.tensorLength;n++)for(var o=this.coordinates(n),i=t,s=0;s<o.length;s++){var h=o[s];"object"==typeof i[h]||(i[h]=[],s!==e)?i=i[h]:i[h]=r[n]}return t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"flat",{get:function(){return this.tensorFilled||(this.tensorFlat=this.getTypedArray(),this.tensorFlat=this.tensorFlat.fill(this.tensorFill),this.tensorFilled=!0),this.tensorFlat},set:function(t){if(t.constructor!==this.flat.constructor)throw new Error("copying from a different TypedArray type is forbidden");if(t.length!==this.tensorLength)throw new Error("supplied array's length doesn't match with tensor's length");this.tensorFlat=t.slice(),this.tensorMin=t.reduce(function(t,e){return Math.min(t,e)}),this.tensorMax=t.reduce(function(t,e){return Math.max(t,e)})},enumerable:!0,configurable:!0}),t.prototype.copy=function(e,r){return void 0===r&&(r=!1),r?(new(t.bind.apply(t,[void 0,e.type].concat(e.shape)))).copy(e):(e.filled?this.tensorFlat=e.flat.slice():this.tensorFlat=null,this.tensorShape=e.shape.slice(),this.tensorStrides=e.strides.slice(),this.tensorLength=e.length,this.tensorDimensions=e.dimensions,this.tensorFill=e.filling,this.tensorFilled=e.filled,this.tensorType=e.type,this.tensorMax=e.max,this.tensorMin=e.min,this)},t.prototype.transpose=function(e){if(void 0===e&&(e=null),null===e){for(var r=[],n=0;n<this.tensorDimensions;n++)r.push(n);e=r.reverse()}var o=[];for(n=0;n<e.length;n++)o[n]=this.tensorShape[e[n]];var i=new(t.bind.apply(t,[void 0,this.tensorType].concat(o))),s=this.getTypedArray(),h=this.flat;for(n=0;n<this.tensorLength;n++){for(var l=this.coordinates(n),a=[],u=0;u<l.length;u++)a[e[u]]=l[u];s[i.index.apply(i,a)]=h[n]}return i.flat=s,i},t.prototype.fill=function(t){if("function"==typeof t){this.tensorFilled=!0,this.tensorFill=null,this.tensorFlat=this.getTypedArray();for(var e=0;e<this.tensorLength;e++){var r=t();this.tensorFlat[e]=r,this.tensorMax=void 0===this.tensorMax?r:Math.max(this.tensorMax,r),this.tensorMin=void 0===this.tensorMin?r:Math.min(this.tensorMin,r)}}else this.tensorFilled=!1,this.tensorFill=t,this.tensorFlat=null,this.tensorMin=t,this.tensorMax=t;return this},t.prototype.coordinates=function(t){for(var e=[],r=t,n=0;n<this.tensorShape.length;n++){var o=Math.floor(r/this.tensorStrides[n]);r-=o*this.tensorStrides[n],e[n]=o}return e},t.prototype.index=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];if(1===t.length)return t[0];if(t.length!==this.tensorDimensions)throw new Error("expected exactly "+this.tensorDimensions+" coordinates, got "+t.length+" coordinates instead");for(var r=0,n=0;n<t.length;n++)r+=t[n]*this.tensorStrides[n];return r},t.prototype.get=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return this.flat[this.index.apply(this,t)]},t.prototype.set=function(t){for(var e=[],r=1;r<arguments.length;r++)e[r-1]=arguments[r];var n=this.flat,o=this.index.apply(this,e),i=n[o];return i===this.tensorMax&&t>i&&(this.tensorMax=t),i===this.tensorMin&&t<i&&(this.tensorMin=t),n[o]=t,this.tensorFlat=n,this},t.prototype.process=function(t){this.tensorShape=t,this.tensorLength=t.reduce(function(t,e){return t*e}),this.tensorDimensions=t.length,this.tensorStrides=[];for(var e=this.tensorShape.length-1;e>=0;e--){var r=this.tensorStrides[e+1],n=e===this.tensorShape.length-1?1:this.tensorShape[e+1];r=void 0===r?1:r,this.tensorStrides[e]=n*r}},t.prototype.getTypedArray=function(){return new this.tensorType(this.length)},t}();e.default=n},function(t,e){var r;r=function(){return this}();try{r=r||Function("return this")()||(0,eval)("this")}catch(t){"object"==typeof window&&(r=window)}t.exports=r},function(t,e,r){(function(e){t.exports=e.Tensor=r(0)}).call(this,r(1))}]);